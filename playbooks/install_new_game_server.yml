---
## Playbook required vars.
# gs_user
# install_path
# lgsmsh_path
# server_script_name
# script_paths
# sudo_rule_name
# web_lgsm_user

- name: Runs Pre-Install Steps for New Auto Installations
  hosts: localhost
  become: true
  connection: local
  vars:
    # Same user defaults to false, meaning default create new user.
    same_user: false
    setup: false
  vars_files:
    - vars/accepted_gs_users.yml

  tasks:
    - name: Include sub tasks
      include_tasks: "{{ item }}"
      loop:
        - tasks/validate_gs_user.yml
        - tasks/create_gs_user_group.yml
        - tasks/create_gs_user.yml
        - tasks/add_weblgsm_to_gs_group.yml
        - tasks/add_sudoers_rules.yml
        - tasks/fix_sudoers_rule.yml

    - name: Create new game server directory
      file:
        path: "{{ install_path }}"
        state: directory
        owner: "{{ gs_user }}"
        group: "{{ gs_user }}"
        mode: '0755'

    - name: Use linuxgsm.sh to fetch {{ server_script_name }}
      command:
        chdir: "{{ lgsmsh_path | dirname }}"
        argv:
          - "{{ lgsmsh_path }}"
          - "{{ server_script_name }}"
      register: lgsmsh_result
      become: yes
      become_user: "{{ web_lgsm_user }}"

    - name: Print linuxgsm.sh output
      debug:
        msg: "Output: {{ lgsmsh_result.stdout }}"

    - name: Copy {{ server_script_name }} into new server dir
      copy:
        src: "{{ lgsmsh_path | dirname }}/{{ server_script_name }}"
        dest: "{{ install_path }}"
        owner: "{{ gs_user }}"
        group: "{{ gs_user }}"
        mode: '0750'

    - name: Delete {{ server_script_name }} file
      file:
        path: "{{ lgsmsh_path | dirname }}/{{ server_script_name }}"
        state: absent
...
