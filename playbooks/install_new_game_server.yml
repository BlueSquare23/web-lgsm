---
## Playbook required vars.
# gs_user
# install_path
# lgsmsh_path
# server_script_name
# script_paths
# sudo_rule_name
# web_lgsm_user

- name: Runs Pre-Install Steps for New Auto Installations
  hosts: localhost
  become: true
  connection: local
  vars:
    # Same user defaults to false, meaning default create new user.
    same_user: false
    # We want to validate the gs_user var to prevent sudo rules getting created
    # as users like ALL or root. Problem with the below list is rn I'll have to
    # remember to update it by hand when they add a new lgsm servers.
    accepted_gs_users:
      - acserver
      - ahlserver
      - ahl2server
      - arkserver
      - arma3server
      - armarserver
      - atsserver
      - avserver
      - bbserver
      - bb2server
      - bdserver
      - bf1942server
      - bfvserver
      - bmdmserver
      - boserver
      - bsserver
      - btserver
      - btlserver
      - ccserver
      - ckserver
      - cmwserver
      - codserver
      - cod2server
      - cod4server
      - coduoserver
      - codwawserver
      - colserver
      - csserver
      - cs2server
      - csczserver
      - csgoserver
      - cssserver
      - ctserver
      - dabserver
      - dayzserver
      - dmcserver
      - dodserver
      - dodrserver
      - dodsserver
      - doiserver
      - dstserver
      - dysserver
      - ecoserver
      - emserver
      - etlserver
      - ets2server
      - fctrserver
      - fofserver
      - gmodserver
      - hcuserver
      - hl2dmserver
      - hldmserver
      - hldmsserver
      - hwserver
      - hzserver
      - insserver
      - inssserver
      - iosserver
      - jc2server
      - jc3server
      - jk2server
      - kfserver
      - kf2server
      - l4dserver
      - l4d2server
      - mcserver
      - mcbserver
      - mhserver
      - mohaaserver
      - momserver
      - mtaserver
      - ndserver
      - necserver
      - nmrihserver
      - nsserver
      - ns2server
      - ns2cserver
      - ohdserver
      - onsetserver
      - opforserver
      - pcserver
      - pc2server
      - pmcserver
      - psserver
      - pvkiiserver
      - pvrserver
      - pwserver
      - pzserver
      - q2server
      - q3server
      - q4server
      - qlserver
      - qwserver
      - ricochetserver
      - roserver
      - rtcwserver
      - rustserver
      - rwserver
      - sampserver
      - sbserver
      - sbotsserver
      - scpslserver
      - scpslsmserver
      - sdtdserver
      - sfserver
      - sfcserver
      - sof2server
      - solserver
      - squadserver
      - stserver
      - stnserver
      - svenserver
      - terrariaserver
      - tfserver
      - tf2server
      - tfcserver
      - tiserver
      - tsserver
      - ts3server
      - tuserver
      - twserver
      - untserver
      - utserver
      - ut2k4server
      - ut3server
      - ut99server
      - vhserver
      - vintsserver
      - vpmcserver
      - vsserver
      - wetserver
      - wfserver
      - wmcserver
      - wurmserver
      - zmrserver
      - zpsserver
      - blue # TODO: Will need to hard code web-lgsm user and do it via install.sh.

  tasks:
    - name: Validate {{ gs_user }} against accepted_gs_users list
      fail:
        msg: "The user {{ gs_user }} is not an accepted user."
      when: gs_user not in accepted_gs_users

    - name: Create new {{ gs_user }} group 
      group:
        name: "{{ gs_user }}"
        state: present
      when: same_user is not defined or same_user == false

    - name: Creating new {{ gs_user}} user
      user:
        name: "{{ gs_user }}"
        groups: "{{ gs_user }}"
        append: true
        state: present
        shell: /bin/bash
        create_home: yes
      when: same_user is not defined or same_user == false

    - name: Add {{ web_lgsm_user }} to new {{ gs_user }} group
      user:
        name: "{{ web_lgsm_user }}"
        groups: "{{ gs_user }}"
        append: true
      when: same_user is not defined or same_user == false

    - name: Ensure required sudoers rules are in place for new user
      community.general.sudoers:
        name: "{{ sudo_rule_name }}"
        user: "{{ web_lgsm_user }}"
        host: "ALL"
        runas: "{{ gs_user }}"
        nopassword: true
        commands:
          - "{{ script_paths }}"
          - /usr/bin/watch
          - /usr/bin/tmux
          - /usr/bin/kill
        state: present
      when: same_user is not defined or same_user == false

    # Community sudoers is broken. This puts a space in the sudoers rule to fix
    - name: Fix missing space before NOPASSWD
      lineinfile:
        path: /etc/sudoers.d/{{ sudo_rule_name }}
        regexp: '^(.*)NOPASSWD:(.*)$'
        line: '\1 NOPASSWD: \2'
        backrefs: yes
        validate: 'visudo -cf %s'
      when: same_user is not defined or same_user == false

    - name: Create new game server directory
      file:
        path: "{{ install_path }}"
        state: directory
        owner: "{{ gs_user }}"
        group: "{{ gs_user }}"
        mode: '0755'

    - name: Use linuxgsm.sh to fetch {{ server_script_name }}
      command:
        chdir: "{{ lgsmsh_path | dirname }}"
        argv:
          - "{{ lgsmsh_path }}"
          - "{{ server_script_name }}"
      register: lgsmsh_result
      become: yes
      become_user: "{{ web_lgsm_user }}"

    - name: Print linuxgsm.sh output
      debug:
        msg: "Output: {{ lgsmsh_result.stdout }}"

    - name: Copy {{ server_script_name }} into new server dir
      copy:
        src: "{{ lgsmsh_path | dirname }}/{{ server_script_name }}"
        dest: "{{ install_path }}"
        owner: "{{ gs_user }}"
        group: "{{ gs_user }}"
        mode: '0750'

    - name: Delete {{ server_script_name }} file
      file:
        path: "{{ lgsmsh_path | dirname }}/{{ server_script_name }}"
        state: absent
...
