## Beta Version 1.6 Todos

* Re-check requirements.txt with pipreqs make sure its got everything and its
  all up to date.

* Fix status indicators for game servers owned by other users.
  - Generally, all that status indicator code kinda needs looked at. It was
    hacked together by me quickly after the last time they (LGSM) changed
    things and broke the way I was getting that info.

* Just discovered the existance of the `lgsm/data/server.uid` file and that
  changes the whole way I'm doing the tmux status indicators.
  - I've made some progress and there is code I want to keep just in case,
    before switching approaches. So going to commit first.

* Validate new username with new get_uid util function.

* Do light refactor of new code and old code. Look over some core parts with
  fresh eyes to see if I'm doing anything obviously stupid anywhere or just
  tweak around and make small improvements.

## Beta Version 1.7 Todos

* Look into make config editor work through sudo.

## In Idea Phase...

* Create a single point of entry script for whole project.
  - So right now I have the init script and the debug script and the setup as a
    systemd service script and I was thinking of adding another script for
    resetting the web portal login pass.
  - Instead of having all these be differnt scripts, roll them all into one,
    single point of entry, `web-lgsm` script.
  - The `install.sh` script can still be its own thing.
  - But pretty much everything else in the script dir can be controlled by one
    main script for the whole project.

* Explore putting new installations in their own user directory like the LGSM
  recommends to begin with.
  - Yeah its a good point for process isolation game servers should be running
    as their own user.
  - Ngl, I've always just kept all of my game servers under the same user but
    I should probably make this a bit more legit and up to spec.
  - I might make this an optional config param. Something like
    `default_install_new_user = yes` or something idk.

* Look into adding a debug mode to conf / app.
  - So if debug in conf is set to true it would just enable debug logging which
    could be used to output what functions are doing n'@.

* Explore if containerizing project with docker is at all feasible /
  worthwhile.

## Backlog

* Do a thorough refactor.
  - Spend some time just re-reading my own code looking for bugs / improvements.
  - More unit testing will probably help with this.

* Think of way to do watch thread timeout. Not terribly important
  - kill_watchers gets the job done alright for rn.
