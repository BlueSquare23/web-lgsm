## Beta Version 1.3 Todos

* Add config editor.
  - Create config page where game server config file is loaded in and user can
    edit it.
  - Create an /edit page with a textarea input where file contents are read
    from and written into.
  - The problem: I don't want to allow arbitrary file editing!
    - Some bad actor could get access to the web-lgms admin creds, edit a
      mcserver, and then send themselves a reverse shell.
    - I want to avoid that!!!
  - Solution: I'm going to make a list of acceptable game server configuration
    files based on the repo below.
    - https://github.com/GameServerManagers/Game-Server-Configs
  - I'm going to make another json file, gs_confs.json and specify what confs
    are acceptable.
  - I will then use that hardcoded list of acceptable confs to find the
    config(s) for a paricular game server to populate the edit config buttons
    on /controls page.
  - /edit page validation will only allow editing of configs in the accepted
    conf names list.

* Continue writing tests to improve coverage.
  - Adjust test code to account for new async way of doing things.
  - Write tests for edit page!
    - Try editing file that doesn't meet validation.
  - Add tests for maxing out the input length of certain vars that get saved to
    the DB and adjust route code to guard against it.
  - Create test for login page to make sure it always redirects to setup if
    there's no user created yet.

* Refactor / Cleanup Code!
  - Determine unified way to do subprocess spawning / communication.
    - Currently using a bunch of different ways to do it and they're all
      disjointed.
    - Need to read up on subprocess and test around with best practices because
      as of rn I'm certain I'm doing things wrong.

* Setup Githup actions to run project tests.
  - I want the green badges!

* Take new screenshots of all pages to reflect latest changes for v1.3 release.

## Beta Version 1.4 Todos

* Create mechanism for exempting certain controls for certain game servers.
  - For example, the Update and Console commands for the Battlefield 1942
    server don't do anything.
    - They're not recognized by that lgsm server and so they just print the
      help menu.
      - Not terrible but just not polished.
  - Instead, I want to somehow hardcode exceptions like that, maybe via another
    json file with a list of game server exceptions. Then those options wont
    even be loaded on the page.
